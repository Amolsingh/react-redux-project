{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/index.js","components/Counter.js","components/Header.js","components/Auth.js","App.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","initialCounterState","counter","showCounter","counterSlice","createSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","initialAuthState","isAuthenticated","login","logout","store","configureStore","reducer","auth","counterActions","actions","Counter","useSelector","show","dispatch","useDispatch","className","classes","value","onClick","Header","header","href","Auth","control","htmlFor","type","id","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,8HCEtBC,EAAsB,CAACC,QAAS,EAAGC,aAAa,GAEhDC,EAAeC,YAAY,CAC7BC,KAAM,UACNL,sBACAM,SAAU,CACNC,UADM,SACIC,GACNA,EAAMP,WAEVQ,UAJM,SAIID,GACNA,EAAMP,WAEVS,SAPM,SAOGF,EAAOG,GACZH,EAAMP,QAAUO,EAAMP,QAAUU,EAAOC,SAE3CC,cAVM,SAUQL,GACVA,EAAMN,aAAeM,EAAMN,gBAOjCY,EAAYV,YAAY,CAC1BC,KAAM,iBACNU,iBAJqB,CAACC,iBAAiB,GAKvCV,SAAU,CACNW,MADM,SACAT,GACFA,EAAMQ,iBAAkB,GAE5BE,OAJM,SAICV,GACHA,EAAMQ,iBAAkB,MAwC9BG,EAAQC,YAAe,CACzBC,QAAS,CACLpB,QAAUE,EAAakB,QACvBC,KAAMR,EAAUO,WAKXE,EAAiBpB,EAAaqB,QAG5BL,GAFYL,EAAUU,QAEtBL,G,OCOAM,EAtFC,WAGd,IAAMxB,EAAUyB,aAAY,SAAAlB,GAAK,OAAIA,EAAMP,QAAQA,WAC7C0B,EAAOD,aAAY,SAAAlB,GAAK,OAAIA,EAAMP,QAAQC,eAG1C0B,EAAWC,cAkBjB,OACE,uBAAMC,UAAWC,IAAQ9B,QAAzB,UACE,+CACC0B,GAAQ,qBAAKG,UAAWC,IAAQC,MAAxB,SAAgC/B,IACzC,sBAAK6B,UAAU,iBAAf,UACE,wBAAQG,QArBW,WACvBL,EAASL,EAAehB,cAoBpB,uBACA,wBAAQ0B,QAlBU,WACtBL,EAASL,EAAeb,SAAS,MAiB7B,4BACA,wBAAQuB,QAfW,WACvBL,EAASL,EAAed,cAcpB,0BAEF,wBAAQwB,QAbiB,WAC3BL,EAASL,EAAeV,kBAYtB,gC,iBCjBSqB,EArBA,WACb,OACE,yBAAQJ,UAAWC,IAAQI,OAA3B,UACE,4CACA,8BACE,+BACE,6BACE,mBAAGC,KAAK,IAAR,2BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,uD,gBCOGC,EApBF,WACX,OACE,sBAAMP,UAAWC,IAAQT,KAAzB,SACE,kCACE,iCACE,sBAAKQ,UAAWC,IAAQO,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKX,UAAWC,IAAQO,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mD,MCEKC,MAVf,WACE,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJOC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,IAAD,CAAU5B,MAAOA,EAAjB,SAAwB,cAAC,EAAD,Q,kBCRpCrB,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,kBCAtDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.2fe4c3cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ZPyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3yHwS\"};","import {createStore} from 'redux';\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = {counter: 0, showCounter: true};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        },\r\n    }\r\n});\r\n\r\nconst initialAuthState = {isAuthenticated: false}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        },\r\n    }\r\n})\r\n\r\nconst counterReducer = (state = initialCounterState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter,\r\n        };\r\n    }\r\n\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter,\r\n        };\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter,\r\n        }\r\n    }\r\n\r\n    if(action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter,\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\n//const store = createStore(counterReducer);\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter : counterSlice.reducer,\r\n        auth: authSlice.reducer,\r\n    }\r\n});\r\n\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;","import classes from './Counter.module.css';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport {Component} from 'react';\nimport {counterActions} from '../store/index';\n\nconst Counter = () => {\n\n  //useSelector enables the subscription automatically, useSElector is mostly used to get data out of the store\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  //useDispatch is used to dispatch the action to the store\n  const dispatch = useDispatch();\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div className='counter button'>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increment by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\n\n//Example using the with class based component\n\n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() {\n\n//   }\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div className='counter button'>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({type: 'increment'}),\n//     decrement: () => dispatch({type: 'decrement'})\n//   }\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nexport default Counter;\n","import classes from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      <nav>\n        <ul>\n          <li>\n            <a href='/'>My Products</a>\n          </li>\n          <li>\n            <a href='/'>My Sales</a>\n          </li>\n          <li>\n            <button>Logout</button>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './Auth.module.css';\n\nconst Auth = () => {\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import { Fragment } from 'react';\nimport Counter from './components/Counter';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport UserProfile from './components/UserProfile';\n\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <Auth />\n      <Counter />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store}><App/></Provider>);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3MbiB\",\"control\":\"Auth_control__2ICZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2aJ95\",\"value\":\"Counter_value__2Iryz\"};"],"sourceRoot":""}